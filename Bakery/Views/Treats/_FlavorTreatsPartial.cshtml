@using Bakery.Models

@model Bakery.Models.Treat

<h2>@Model.Description's Flavors:</h2>

@if (User.Identity.IsAuthenticated)
{
  <p><em>You may modify assigned flavors using the buttons.</em></p>
  @foreach (Flavor flavor in ViewData["flavors"] as List<Flavor>)
  {
    if (Model.FlavorTreats.Where(ft => ft.FlavorId == flavor.FlavorId).Count() > 0)
    {
      <li class="ft-checked">
        @flavor.Description
        <button type="button" class="btn btn-dark btn-sm remove-ft-button">Remove</button>
        <input class="treat-id" type="hidden" value=@Model.TreatId />
        <input class="flavor-id" type="hidden" value=@flavor.FlavorId />
      </li>
    }
    else
    {
      <li>
        @flavor.Description
        <button type="button" class="btn btn-dark btn-sm add-ft-button">Add</button>
        <input class="treat-id" type="hidden" value=@Model.TreatId />
        <input class="flavor-id" type="hidden" value=@flavor.FlavorId />
      </li>
    }
  }
}
else
{
<ul>
  @foreach (FlavorTreat ft in Model.FlavorTreats)
  {
    <li>@ft.Flavor.Description</li>
  }
</ul>
}

<script>
  $(".remove-ft-button").on("click", function() {
    let treatId = $(this).siblings(".treat-id").val();
    let flavorId = $(this).siblings(".flavor-id").val();
    $("#flavor-treats-div").load("../RemoveFlavorTreat", {TreatId: treatId, FlavorId: flavorId});
  });

  $(".add-ft-button").on("click", function() {
    let treatId = $(this).siblings(".treat-id").val();
    let flavorId = $(this).siblings(".flavor-id").val();
    $("#flavor-treats-div").load("../AddFlavorTreat", {TreatId: treatId, FlavorId: flavorId});
  });
</script>