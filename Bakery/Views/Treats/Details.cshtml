@{
  Layout = "_Layout";
}

@model Bakery.Models.Treat

<h2>@Model.Description's Details:</h2>
<div id="details-div">
  @Html.LabelFor(model => model.Description, "Description: ")
  @Html.DisplayFor(model => model.Description)
  @Html.LabelFor(model => model.Price, "Price: $")
  @Html.DisplayFor(model => model.Price)
  @if (User.Identity.IsAuthenticated)
    {
      <hr />
      <button type="button" class="btn btn-dark btn-sm" id="edit-button">Edit or Delete</button>
    }
</div>
<div id="edit-div" class="initially-hidden">
  @using (Html.BeginForm("Edit", "Treats"))
  {
    @Html.HiddenFor(model => model.TreatId)
    @Html.LabelFor(model => model.Description, "Description: ")
    @Html.EditorFor(model => model.Description)
    @Html.LabelFor(model => model.Price, "Price: $")
    @Html.TextBoxFor(model => model.Price, new {@type = "number", @step = ".01", @min = "0", @Value = Model.Price})
    <button type="submit" class="btn btn-dark btn-sm">Submit changes</button>
  }
  <button type="button" class="btn btn-dark btn-sm" id="cancel-edit-button">Cancel editing</button>
  <button type="button" class="btn btn-dark btn-sm" id="delete-button">Delete</button>
  <div id="delete-confirm-div" class="initially-hidden">
    <h5>Are you sure you want to delete this Treat?</h5>
    @using (Html.BeginForm("Delete", "Treats"))
    {
      @Html.HiddenFor(model => model.TreatId)
      <button type="submit" class="btn btn-danger btn-sm">Confirm deletion</button>
    }
    <button type="button" class="btn btn-dark btn-sm" id="cancel-delete-button">Cancel deletion</button>
  </div>
</div>
<div id="flavor-treats-div">
  @await Html.PartialAsync("_FlavorTreatsPartial", Model, ViewData)
</div>

<script src="~/js/details.js"></script>